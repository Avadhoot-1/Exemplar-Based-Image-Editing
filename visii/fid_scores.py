from torchmetrics.image.fid import FrechetInceptionDistance
from torchvision import transforms
from PIL import Image
import torch
fid = FrechetInceptionDistance(feature=64).to('cuda')

# Load image distribution
transform = transforms.Compose([
    transforms.Resize((299, 299)),
    transforms.ToTensor(),   
    transforms.Lambda(lambda x: x * 255),
    transforms.Lambda(lambda x: x.to(torch.uint8))       
])

folders = [
    "add_beard",
    "add_bird",
    "add_birdFlock",
    "add_bow_tie",
    "add_butterfly3",
    "add_campfire",
    "add_car1",
    "add_carousel",
    "add_cat5",
    "add_clock_tower",
    "add_dinosaur",
    "add_fireworks",
    "add_flamingo",
    "add_geese",
    "add_ghost1",
    "add_hat1",
    "add_hotAirBalloon",
    "add_koala",
    "add_lamp",
    "add_lightningBolt",
    "add_lion1",
    "add_meteor",
    "add_moon3",
    "add_polarBear3",
    "add_seagullsFlock",
    "add_swimmingPool",
    "add_sword2",
    "add_turban",
    "add_ufo",
    "add_waterdrop",
    "bg_OrangeClouds",
    "bg_beach",
    "bg_beach345",
    "bg_blury",
    "bg_foggy101",
    "bg_forest3",
    "bg_lightningGreen",
    "bg_mars",
    "bg_orange",
    "bg_rain3",
    "bg_sepiaTone",
    "bg_skyBlue",
    "bg_snow",
    "bg_snow123",
    "bg_snowScene",
    "bg_snowfall",
    "bg_spring4",
    "bg_springPink",
    "bg_stormyDay",
    "bg_summer2",
    "bg_summerGreen",
    "bg_sunrisePink",
    "bg_tintBlue",
    "bg_womanDesert",
    "bg_woods",
    "poc_BlondeHair3",
    "poc_PinkHouse",
    "poc_auburnhair",
    "poc_blackGown",
    "poc_blueEyes",
    "poc_brunette",
    "poc_cat1",
    "poc_cat3",
    "poc_child2baby",
    "poc_jacket",
    "poc_mermaid",
    "poc_purpleFlower",
    "poc_redFlowers",
    "poc_redMountain",
    "poc_redUmbrella",
    "poc_redhair",
    "poc_rose",
    "poc_rosesPink",
    "poc_skeleton",
    "poc_son2Baby",
    "poc_waterfall",
    "poc_zombie",
    "sor_Fort2Castle",
    "sor_alien34",
    "sor_astronaut",
    "sor_barn2castle",
    "sor_bed2hammock",
    "sor_castle2",
    "sor_castle34",
    "sor_cat2",
    "sor_cat7",
    "sor_cave",
    "sor_cowboy",
    "sor_fire",
    "sor_fox2Polarbear3",
    "sor_fox2rabbit",
    "sor_girl2boy",
    "sor_girl2boy4",
    "sor_girl2cat2",
    "sor_helicopter",
    "sor_hhouse2lighthouse",
    "sor_house2Castle",
    "sor_humanCat",
    "sor_igloo",
    "sor_igloo34",
    "sor_lighthouse2Church",
    "sor_lion1",
    "sor_lion3",
    "sor_lizard",
    "sor_man2",
    "sor_man4",
    "sor_mosque2",
    "sor_motorcycle",
    "sor_mountain2desert",
    "sor_mouse",
    "sor_pagoda2",
    "sor_person2dog",
    "sor_pirateShip",
    "sor_plane2helicopter",
    "sor_polarBear",
    "sor_princess2frog",
    "sor_rainbow3",
    "sor_sword2lighsaber",
    "sor_tajmahal",
    "sor_temple2church",
    "sor_unicorn",
    "sor_unicycle",
    "sor_wolf2cat1",
    "sor_woman",
    "sor_yurt",
    "style_AndyWarholPainting",
    "style_abstract3",
    "style_asian",
    "style_barnOwl",
    "style_black2",
    "style_bronzeStatue",
    "style_caricatures1",
    "style_cartoonbw",
    "style_cubism",
    "style_fairy3",
    "style_foggynight",
    "style_frozen",
    "style_godenBridge",
    "style_goldBench",
    "style_haunted",
    "style_leavesgreen",
    "style_manga",
    "style_manga23",
    "style_marble",
    "style_pencilDrawing",
    "style_picasso",
    "style_purple3",
    "style_purpleOwl",
    "style_red",
    "style_sculpture",
    "style_silhouetee",
    "style_skeleton",
    "style_sketch1",
    "style_spiral",
    "style_statueip2p",
    "style_vanGogh",
    "style_watercolor2pencil",
    "style_watercolor4",
    "style_werewolf",
    "style_willow",
    "style_woodBridge",
    "style_woodcarving",
    "style_woodcut",
    "style_yellow1",
    "style_yellowRoses",
    "style_zombie101",
    "style_zombie2"
]

imageD = []
imageD_ground = []

# In each folder, load imageD and imageD_ground
for folder in folders:
    img_path = f"/sensei-fs/tenants/Sensei-MDSR/tarun/intern-work/avadhoot/avadhoot/results/{folder}/only_ct_img_1.5_cond_10:0_0.png"
    img_ground_path = f"/home/user/stuff/image_folders1/{folder}/1_1.png"
    
    img = transform(Image.open(img_path).convert('RGB')).unsqueeze(0).to('cuda')
    img_ground = transform(Image.open(img_ground_path).convert('RGB')).unsqueeze(0).to('cuda')
    
    imageD.append(img)
    imageD_ground.append(img_ground)

# Flatten the lists
imageD = torch.cat(imageD)
imageD_ground = torch.cat(imageD_ground)

# Calculate FID score
fid.update(imageD, real=False)       # Use real=False for generated images
fid.update(imageD_ground, real=True) # Use real=True for real images
fid_score = fid.compute()
print(fid_score)